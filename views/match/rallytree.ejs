<%- include("../partials/header") %>

<h1>Rally Tree</h1>
<a href="/match">Go back</a>

<p>See distribution of points by rally length</p>


<div id="dashboard_div">
    <div id="filter_div"></div>
    <div id="chart_div"></div>
</div>


<script>

    // function to draw google charts
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {

        
        // initialize array to create chart data: columns + rows;
        const dataAgg = [];

        // create columns
        const columns = ["Player", "Rally Length", "Points Won", "Points Lost"];
        dataAgg.push(columns);

        // create rows
        const rows = [];
        const players = ["<%= data[0].server %>", "<%= data[0].receiver %>"];
        const rallyLenMax = Math.max.apply(Math, [<%= data.map(point => point.rallyLength) %>]);
        for (let player of players) {
            for (let rallyLen=1; rallyLen <= rallyLenMax; rallyLen++) {
                rows.push([player, rallyLen, 0, 0]);
            };
        };
        let winner;
        let rallyLen;
        let rowsFiltered;
        <% data.forEach(point => { %>
            winner = "<%= point.winner %>";
            rallyLen = <%= point.rallyLength %>;
            rowsFiltered = rows.filter(row => row[1] === rallyLen);
            if (winner===rowsFiltered[0][0]) {
                rowsFiltered[0][2]++;
                rowsFiltered[1][3]--;
            } else {
                rowsFiltered[1][2]++;
                rowsFiltered[0][3]--;
            }
      
        <% }); %>
        
        // push rows to chart data
        for (let row of rows) {
            dataAgg.push(row);
        };

        // get max value for chart axis
        let maxCallback = (max, cur) => Math.max(max, cur);
        let maxPointsWon = rows.map(row => row[2]).reduce(maxCallback, -Infinity);

        //let minCallback = (min, cur) => Math.min(min, cur);
        //let minPointsLost = rows.map(row => row[3]).reduce(minCallback, Infinity);
        
        

        // create table for chart data
        const data = google.visualization.arrayToDataTable(dataAgg);

  
        // create dashboard instance
        const dashboard = new google.visualization.Dashboard(document.getElementById("dashboard_div"));

        // create filter
        const playerFilter = new google.visualization.ControlWrapper({
           controlType: "CategoryFilter",
            containerId: "filter_div",
            options: {
                filterColumnLabel: "Player",
                ui: {
                    allowMultiple: false,
                    allowNone: false
                }
            },
        
        });

        // create chart
        const barChart = new google.visualization.ChartWrapper({
            chartType: "BarChart",
            containerId: "chart_div",
            view: {
                columns: [1,2,3]
            },
            options: {
                isStacked: true,
                vAxis: {
                    direction: -1,
                    title: "Rally Length"
                },
                colors: ["green", "red"],
                hAxis: {
                    maxValue: maxPointsWon + 1,
                    minValue: -1*(maxPointsWon + 1)
                }
            }
        });

        // bind filter to chart
        dashboard.bind(playerFilter, barChart);

        // draw chart
        dashboard.draw(data);

    }
    
    
    
</script>

<%- include("../partials/footer") %>
